{"ast":null,"code":"var _jsxFileName = \"/Users/ljcuriel/Thinkful/Flashcard_App/Project_Flashcards_Qualified_1/src/Layout/Study.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { listCards } from \"../utils/api\";\nexport default function Study() {\n  const [cards, setCards] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    async function getCards() {\n      const cardsFromAPI = await listCards(deckId);\n      setCards(cardsFromAPI);\n    }\n\n    getCards();\n  }, [deckId]);\n\n  if (cards.length < 2) {\n    cards.map(card => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/ljcuriel/Thinkful/Flashcard_App/Project_Flashcards_Qualified_1/src/Layout/Study.jsx"],"names":["React","useEffect","useState","useParams","listCards","Study","cards","setCards","deckId","getCards","cardsFromAPI","length","map","card"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,eAAe,SAASC,KAAT,GAAgB;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAaL,SAAS,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,QAAf,GAAyB;AACrB,YAAMC,YAAY,GAAG,MAAMN,SAAS,CAACI,MAAD,CAApC;AACAD,MAAAA,QAAQ,CAACG,YAAD,CAAR;AACD;;AAEDD,IAAAA,QAAQ;AACb,GAPQ,EAOP,CAACD,MAAD,CAPO,CAAT;;AAUA,MAAGF,KAAK,CAACK,MAAN,GAAe,CAAlB,EAAoB;AAChBL,IAAAA,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AACD,sBAAO,yCAAP;AACH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { listCards } from \"../utils/api\"\n\nexport default function Study(){\n    const [cards, setCards] = useState([]);\n    const { deckId } = useParams();\n\n    useEffect(() => {\n        async function getCards(){\n            const cardsFromAPI = await listCards(deckId);\n            setCards(cardsFromAPI);\n          }\n         \n          getCards();\n    },[deckId]);\n\n   \n    if(cards.length < 2){\n        cards.map((card) => (\n            <div>\n            \n            </div>\n        ))\n    }\n    return <></>\n}"]},"metadata":{},"sourceType":"module"}